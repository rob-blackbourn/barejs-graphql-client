{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap d22551ec75754a17cc3a","webpack:///./src/graphql-client.js","webpack:///./src/graphql-event-source-client.js","webpack:///./src/graphql-fetch-client.js","webpack:///./src/fetch-error.js"],"names":["abortController","fetch","method","signal","body","operationName","response","json","onNext","onComplete","error","location","eventSource","event","data","JSON","onError","subscriptionUrl","url","encodeURIComponent","onSuccess","constructor","Error"],"mappings":"AAAA,eACA,iDADA,CAEA,kBAFA,CAGA,qCAHA,CAIA,oCAJA,CAKA,wBALA,CAMA,oCANA,CAQA,8BACC,CATD,EASC,kCATD,CASC,WACD,M,aCNA,cAGA,QACA,oBAGA,YACA,GADA,CAEA,IAFA,CAGA,UAHA,EAaA,MANA,mCAMA,CAHA,MAGA,UACA,CAxBA,SA4DA,MAhCA,MAgCA,CA7BA,KA6BA,CA1BA,oBACA,QADA,EAEA,2BACA,eADA,CAEA,aAFA,CAGA,KAHA,EAMA,CAkBA,CAfA,gBACA,sBACA,WAA2B,mBAA4B,CADvD,CAEA,WAAiC,QAAe,CAFhD,CAIA,MADA,aACA,EACA,CASA,CANA,kBAAsD,gDAA+D,CAMrH,CAHA,MAGA,S,gEC3De,yBAA2F,CACxG,KAAMA,GAAkB,GAAxB,iBAmDA,MAhDAC,SAAW,CACTC,OADS,OAETC,OAAQH,EAFC,OAGTI,KAAM,eAAe,qBAGnBC,eAHmB,CAAf,CAHG,CAAXJ,OASQK,KAAY,CAChB,MAAIA,WAAJ,CAGEA,cACQC,KAAQ,CACZC,IADY,CAEZC,GAHJH,SAKSI,KALTJ,KAHF,KASO,OAAIA,WAAJ,CAA6B,MAI5BK,GAAWL,cAAjB,UAAiBA,CAJiB,CAM5BM,EAAc,GAApB,YAAoB,GANc,CAQlCA,YAAwBC,KAAS,CAC/B,KAAMC,GAAOC,WAAWF,EAAxB,IAAaE,CAAb,CACAP,IAFFI,CARkC,CAalCA,UAAsBF,KAAS,CAC7BM,IADFJ,CAbkC,CAiBlCZ,iBAAiC,IAAM,CACrC,CAAIY,eADiC,EAEnCA,SAFJZ,CAjBK,KAuBLgB,GAAQ,QAARA,2BAAQ,CAARA,CA1CNf,SA6CSS,KA7CTT,KAgDA,CAAO,IAAM,CACXD,SADF,C,CCtDa,uBAA6F,CAC1G,GAAIiB,GAAkBC,YAAtB,sBAD0G,IAGxGD,GAAmB,cAAgBE,mBAAmBJ,KAAtDE,SAAsDF,GAAnBI,CAHqE,MAMxGF,GAAmB,kBAAnBA,qBANwG,EAS1G,KAAML,GAAc,GAApB,YAAoB,GAApB,CAIA,MAHAA,aAAwBC,KAASO,EAAUL,WAAWF,EAAtDD,IAA2CG,CAAVK,CAGjC,CAFAR,UAAsBF,KAAtBE,IAEA,CAAOA,EAAP,K,CCXa,yBAA6F,CAC1GX,WACEC,OADFD,OAEEG,KAAM,eAAe,qBAGnBC,eAHmB,CAAf,CAFRJ,WASQK,KAAY,CACZA,EAAJ,EADgB,CAEdA,cACQC,KAAQ,CACZa,IAFJd,SAISI,KAJTJ,KAFc,CAQdU,EAAQ,QAARA,2BAAQ,CAARA,CAjBNf,SAoBSS,KApBTT,K,kDCHa,qBAA+B,CAC5CoB,mBAAkC,CAChC,WADgC,CAG5BC,MAAJ,iBAHgC,EAI9BA,+BAJ8B,CAOhC,sBAPgC,CAQhC,eACD,CAV2C,C,qWLA9C,C","file":"index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"barejs-graphql-client\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"barejs-graphql-client\"] = factory();\n\telse\n\t\troot[\"barejs-graphql-client\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap d22551ec75754a17cc3a","import FetchError from './fetch-error'\n\nexport default function graphqlClient (url, query, variables, operationName, onNext, onError, onComplete) {\n  const abortController = new AbortController()\n\n  // Invoke fetch as a POST with the GraphQL content in the body.\n  fetch(url, {\n    method: 'POST',\n    signal: abortController.signal,\n    body: JSON.stringify({\n      query,\n      variables,\n      operationName\n    })\n  })\n    .then(response => {\n      if (response.status === 200) {\n        // A 200 response is from a query or mutation.\n\n        response.json()\n          .then(json => {\n            onNext(json)\n            onComplete()\n          })\n          .catch(error => onError(error))\n      } else if (response.status === 201) {\n        // A 201 is the response for a subscription.\n\n        // The url for the event source is passed in the 'location' header.\n        const location = response.headers.get('location')\n\n        const eventSource = new EventSource(location)\n\n        eventSource.onmessage = event => {\n          const data = JSON.parse(event.data)\n          onNext(data)\n        }\n\n        eventSource.onerror = error => {\n          onError(error)\n        }\n\n        abortController.signal.onabort = () => {\n          if (eventSource.readyState !== 2) {\n            eventSource.close()\n          }\n        }\n      } else {\n        onError(new FetchError(response, 'Failed to execute GraphQL'))\n      }\n    })\n    .catch(error => onError(error))\n\n  // Return an unsubscribe function.\n  return () => {\n    abortController.abort()\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/graphql-client.js","export default function graphqlEventSourceClient (url, query, variables, operationName, onError, onSuccess) {\n  let subscriptionUrl = url + '?query=' + encodeURIComponent(query)\n  if (variables) {\n    subscriptionUrl += '&variables=' + encodeURIComponent(JSON.stringify(variables))\n  }\n  if (operationName) {\n    subscriptionUrl += '&operationName=' + encodeURIComponent(operationName)\n  }\n\n  const eventSource = new EventSource(subscriptionUrl)\n  eventSource.onmessage = event => onSuccess(JSON.parse(event.data))\n  eventSource.onerror = error => onError(error)\n  // Return the close function to unsubscribe.\n  return eventSource.close\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/graphql-event-source-client.js","import FetchError from './fetch-error'\n\nexport default function graphqlFetchClient (url, init, query, variables, operationName, onError, onSuccess) {\n  fetch(url, {\n    method: 'POST',\n    body: JSON.stringify({\n      query,\n      variables,\n      operationName\n    }),\n    ...init\n  })\n    .then(response => {\n      if (response.ok) {\n        response.json()\n          .then(json => {\n            onSuccess(json)\n          })\n          .catch(error => onError(error))\n      } else {\n        onError(new FetchError(response, 'Failed to execute GraphQL'))\n      }\n    })\n    .catch(error => onError(error))\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/graphql-fetch-client.js","export default class FetchError extends Error {\n  constructor (response, ...params) {\n    super(...params)\n\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, FetchError)\n    }\n\n    this.name = 'FetchError'\n    this.response = response\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/fetch-error.js"],"sourceRoot":""}